#include <cmath>
#include <indications.hpp>

#define DECREASE_LUMINANCE(_X_, _Y_) \
          ((_X_ - _Y_) >= 0 ? (_X_ - _Y_) : 0)

namespace {

struct vdp
{
    int x;
    int y;
    int r;
} data [] = {
    { 0,  8, 100}, { 1,  5, 104}, { 1,  6, 108}, { 1,  7, 111},
    { 1,  8, 112}, { 1,  9, 111}, { 1, 10, 108}, { 1, 11, 104},
    { 2,  3, 102}, { 2,  4, 109}, { 2,  5, 116}, { 2,  6, 120},
    { 2,  7, 123}, { 2,  8, 125}, { 2,  9, 123}, { 2, 10, 120},
    { 2, 11, 116}, { 2, 12, 109}, { 2, 13, 102}, { 3,  2, 102},
    { 3,  3, 111}, { 3,  4, 119}, { 3,  5, 127}, { 3,  6, 132},
    { 3,  7, 136}, { 3,  8, 137}, { 3,  9, 136}, { 3, 10, 132},
    { 3, 11, 127}, { 3, 12, 119}, { 3, 13, 111}, { 3, 14, 102},
    { 4,  2, 109}, { 4,  3, 119}, { 4,  4, 129}, { 4,  5, 137},
    { 4,  6, 144}, { 4,  7, 148}, { 4,  8, 150}, { 4,  9, 148},
    { 4, 10, 144}, { 4, 11, 137}, { 4, 12, 129}, { 4, 13, 119},
    { 4, 14, 109}, { 5,  1, 104}, { 5,  2, 116}, { 5,  3, 127},
    { 5,  4, 137}, { 5,  5, 146}, { 5,  6, 154}, { 5,  7, 160},
    { 5,  8, 162}, { 5,  9, 160}, { 5, 10, 154}, { 5, 11, 146},
    { 5, 12, 137}, { 5, 13, 127}, { 5, 14, 116}, { 5, 15, 104},
    { 6,  1, 108}, { 6,  2, 120}, { 6,  3, 132}, { 6,  4, 144},
    { 6,  5, 154}, { 6,  6, 164}, { 6,  7, 172}, { 6,  8, 175},
    { 6,  9, 172}, { 6, 10, 164}, { 6, 11, 154}, { 6, 12, 144},
    { 6, 13, 132}, { 6, 14, 120}, { 6, 15, 108}, { 7,  1, 111},
    { 7,  2, 123}, { 7,  3, 136}, { 7,  4, 148}, { 7,  5, 160},
    { 7,  6, 172}, { 7,  7, 182}, { 7,  8, 187}, { 7,  9, 182},
    { 7, 10, 172}, { 7, 11, 160}, { 7, 12, 148}, { 7, 13, 136},
    { 7, 14, 123}, { 7, 15, 111}, { 8,  0, 100}, { 8,  1, 112},
    { 8,  2, 125}, { 8,  3, 137}, { 8,  4, 150}, { 8,  5, 162},
    { 8,  6, 175}, { 8,  7, 187}, { 8,  8, 200}, { 8,  9, 187},
    { 8, 10, 175}, { 8, 11, 162}, { 8, 12, 150}, { 8, 13, 137},
    { 8, 14, 125}, { 8, 15, 112}, { 8, 16, 100}, { 9,  1, 111},
    { 9,  2, 123}, { 9,  3, 136}, { 9,  4, 148}, { 9,  5, 160},
    { 9,  6, 172}, { 9,  7, 182}, { 9,  8, 187}, { 9,  9, 182},
    { 9, 10, 172}, { 9, 11, 160}, { 9, 12, 148}, { 9, 13, 136},
    { 9, 14, 123}, { 9, 15, 111}, {10,  1, 108}, {10,  2, 120},
    {10,  3, 132}, {10,  4, 144}, {10,  5, 154}, {10,  6, 164},
    {10,  7, 172}, {10,  8, 175}, {10,  9, 172}, {10, 10, 164},
    {10, 11, 154}, {10, 12, 144}, {10, 13, 132}, {10, 14, 120},
    {10, 15, 108}, {11,  1, 104}, {11,  2, 116}, {11,  3, 127},
    {11,  4, 137}, {11,  5, 146}, {11,  6, 154}, {11,  7, 160},
    {11,  8, 162}, {11,  9, 160}, {11, 10, 154}, {11, 11, 146},
    {11, 12, 137}, {11, 13, 127}, {11, 14, 116}, {11, 15, 104},
    {12,  2, 109}, {12,  3, 119}, {12,  4, 129}, {12,  5, 137},
    {12,  6, 144}, {12,  7, 148}, {12,  8, 150}, {12,  9, 148},
    {12, 10, 144}, {12, 11, 137}, {12, 12, 129}, {12, 13, 119},
    {12, 14, 109}, {13,  2, 102}, {13,  3, 111}, {13,  4, 119},
    {13,  5, 127}, {13,  6, 132}, {13,  7, 136}, {13,  8, 137},
    {13,  9, 136}, {13, 10, 132}, {13, 11, 127}, {13, 12, 119},
    {13, 13, 111}, {13, 14, 102}, {14,  3, 102}, {14,  4, 109},
    {14,  5, 116}, {14,  6, 120}, {14,  7, 123}, {14,  8, 125},
    {14,  9, 123}, {14, 10, 120}, {14, 11, 116}, {14, 12, 109},
    {14, 13, 102}, {15,  5, 104}, {15,  6, 108}, {15,  7, 111},
    {15,  8, 112}, {15,  9, 111}, {15, 10, 108}, {15, 11, 104},
    {16,  8, 100}
};

const int wheels_indicator_width = 220;

int ind_color_util(int x, double ind)
{
    if (x >= 108 && x <= 111)
    {
        return 0;
    }

    double wmin, wmax;

    if (ind < 0.0)
    {
        wmin = ind;
        wmax = 0.0;
    }
    else
    {
        wmin = 0.0;
        wmax = ind;
    }

    double w = 0.00913242*x - 1;

    if (w < wmin || w > wmax)
    {
        return -1;
    }

    return (fabs(155.0*w) + 100.0);
}

} // namespace

void indications::render(screen_buffer &sb)
{
    if (! visible_)
    {
        return;
    }

    //
    // Wheels.
    //

    int off_x = (sb.get_width() / 2) - (wheels_indicator_width / 2);
    int off_y = sb.get_height() - 25;
    pixel p;

    int wheels_index = round(5.0*wheel_turn_ + 5.0);

    for (int i = 0; i < 11; i++)
    {
        if (wheels_index == i)
        {
            p.g=0;
            p.b=0;

            for (auto &d : data)
            {
                p.r = d.r+55;
                sb.put_pixel(d.x+off_x, d.y+off_y, p);
            }
        }
        else
        {
            for (auto &d : data)
            {
                sb.get_pixel(d.x+off_x, d.y+off_y, p);
                p.r = DECREASE_LUMINANCE(p.r, 20);
                p.g = DECREASE_LUMINANCE(p.g, 20);
                p.b = DECREASE_LUMINANCE(p.b, 20);
                sb.put_pixel(d.x+off_x, d.y+off_y, p);
            }
        }

        off_x += 20;
    }

    //
    // Gas pedal. XXX TODO.
    //

    off_x = (sb.get_width() / 2) - (wheels_indicator_width / 2);
    off_y = sb.get_height() - 35;

    for (int x = 0; x < wheels_indicator_width; x++)
    {
        for (int y = 0; y < 5; y++)
        {
            int c = ind_color_util(x, gas_);

            if (c > 0)
            {
                p.r = static_cast<uint8_t>(c);
                p.g = 0;
                p.b = 0;
                sb.put_pixel(off_x + x, off_y - y, p);
            }
            else if (c < 0)
            {
                sb.get_pixel(off_x + x, off_y - y, p);
                p.r = DECREASE_LUMINANCE(p.r, 20);
                p.g = DECREASE_LUMINANCE(p.g, 20);
                p.b = DECREASE_LUMINANCE(p.b, 20);
                sb.put_pixel(off_x + x, off_y - y, p);
            }
        }
    }
}
